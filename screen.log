-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc - works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ - works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jovyan/multicore-hw2/sources/build
make[1]: Entering directory '/home/jovyan/multicore-hw2/sources/build'
make[2]: Entering directory '/home/jovyan/multicore-hw2/sources/build'
[ 33%] Building NVCC (Device) object CMakeFiles/main.dir/src/main_generated_main.cu.o
[ 66%] Building NVCC (Device) object CMakeFiles/main.dir/src/main_generated_core.cu.o
Scanning dependencies of target main
make[2]: Leaving directory '/home/jovyan/multicore-hw2/sources/build'
make[2]: Entering directory '/home/jovyan/multicore-hw2/sources/build'
[100%] Linking CXX executable main
make[2]: Leaving directory '/home/jovyan/multicore-hw2/sources/build'
[100%] Built target main
make[1]: Leaving directory '/home/jovyan/multicore-hw2/sources/build'


Start benchmark with (k, m, n) = (3, 1, 16777216):

Version 0: 46.043743
Version 1: 48.321377
Version 2: 61.228161
Version 3: 58.445663
Version 4: 97.289246
Version 5: 107.971481
Version 6: 67.247620
Version 7: 58.223648
Version 8: 25.650145

Finish benchmark with (k, m, n) = (3, 1, 16777216).



Start benchmark with (k, m, n) = (16, 1, 16777216):

Version 0: 201.456345
Version 1: 236.343750
Version 2: 262.764587
Version 3: 338.373627
Version 4: 410.671204
Version 5: 399.344299
Version 6: 346.048981
Version 7: 343.083435
Version 8: 100.346466

Finish benchmark with (k, m, n) = (16, 1, 16777216).



Start benchmark with (k, m, n) = (3, 1024, 1048576):

Version 0: 2804.438965
Version 1: 384.369141
Version 2: 40.040672
Version 3: 14.915136
Version 4: 17.889824
Version 5: 18.035681
Version 6: 17.655745
Version 7: 20.012447
Version 8: 9.970624

Finish benchmark with (k, m, n) = (3, 1024, 1048576).



Start benchmark with (k, m, n) = (16, 1024, 1048576):

Version 0: 12104.106445
Version 1: 488.961487
Version 2: 148.049179
Version 3: 128.129410
Version 4: 46.449280
Version 5: 47.161728
Version 6: 64.689758
Version 7: 48.638943
Version 8: 17.292192

Finish benchmark with (k, m, n) = (16, 1024, 1048576).

Small sample 0:
---
Search points:
- [ 0.40 0.60 0.60 ]
Reference points:
- 0: [ 0.10 0.50 0.80 ]
- 1: [ 1.00 1.00 0.50 ]
Results:
- 0 (0.374)
cudaCallback: 0.929 ms


Small sample 1:
---
Search points:
- [ 0.60 0.90 0.40 ]
- [ 0.80 0.70 0.10 ]
Reference points:
- 0: [ 0.10 0.60 0.70 ]
- 1: [ 0.70 0.80 0.80 ]
- 2: [ 0.80 0.80 0.60 ]
- 3: [ 0.70 0.30 0.70 ]
- 4: [ 0.10 0.50 0.30 ]
- 5: [ 0.60 0.90 0.80 ]
- 6: [ 0.20 1.00 0.30 ]
- 7: [ 0.00 1.00 0.30 ]
Results:
- 2 (0.300)
- 2 (0.510)
cudaCallback: 0.620 ms


Sample 2:
---
cudaCallback: 0.600 ms


Sample 3:
---
cudaCallback: 1.832 ms


Sample 4:
---
cudaCallback: 3.294 ms


Sample 5:
---
cudaCallback: 0.403 ms


Sample 6:
---
cudaCallback: 0.925 ms


Sample 7:
---
cudaCallback: 2.689 ms


